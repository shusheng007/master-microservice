# my global config
global:
  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - "node_down.yml"
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: "prometheus"

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ["172.171.1.14:9090"]
  # 监控redis job
  # - job_name: 'redis'
  #   static_configs:
  #    - targets: ['172.171.1.16:9121']
  #      labels:
  #        instance: redis

  - job_name: 'node'
    scrape_interval: 8s
    static_configs:
     - targets: ['172.171.1.17:9100']
       labels:
         instance: node
#  监控docker的
#  - job_name: 'cadvisor'
#    static_configs:
#     - targets: ['172.171.1.18:8088']
#       labels:
#         instance: cadvisor

  - job_name: 'spring_micrometer'
    # Path to the prometheus end point in our application. “micromexample” is the context and “actuator/prometheus” is default path for prometheus in our application
    metrics_path: '/actuator/prometheus/metrics'
    static_configs:
      - targets: ['localhost:7001']



